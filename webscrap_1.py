#**1 소개 
# 웹 스크래핑과 웹 크롤링은 다름
# 웹 스크래핑
# -웹페이지에서 내가 원하는 부분만 떼오는 것(필요한 부분만 가져오는 것)
# 웹 크롤링
# -어떤 웹페이지가 주어지면 그 페이지 내에 있는 링크들을 따라가면서 모든 내용을 가져오는 것
# -웹페이지마다 보통 허용범위를 알려주는데, 이 링크들을 따라가면서 마구잡이로 데이터를 가져오는 것
#(**3 Html 설명은 생략)
#**4 Xpath ('2_xpath.txt' 설명)
# 웹 페이지에 엄청 많은 element들이 있기 때문에 정확히 어떤 동작을 하기 위해서는 주소를 정확히 설정 해주어야 함!
# 그러기 위해서 x_path를 사용! 
# 정리하자면, x_path는 html문서에 있는 특정 엘리먼트를 지칭하는 주소(경로)
# 방법: 웹페이지에 개발자도구를 켜서 원하는 element 부분에 대고 마우스오른쪽 클릭->Copy->Copy Xpath/Copy full Xpath

#**6 Requests 
# 웹스크래핑하기 위해서는 웹페이지의 정보 즉, html 문서 정보가 필요한데 이런 것을 가져오기 위해서 쓸 수 있는게 requests 라이브러리
# '3_requests.py'파일 만들어서 설명

#**7, 8 정규식기본1, 정규식 기본2
# '4_re.py' 파일 만들어서 설명 
# 정규식이란 '정해진 형태의 식'을 의미 
# 정규식의 예) 주민등록번호(901112-1234567), 이메일주소(gma@naver.com),IP 주소(196.123.0.1) 등
# 정규식은 사실 굉장히 어렵고 복잡한 내용임
# 그러므로, 자주쓰이고 웹스크래핑에 필요한 부분만 뽑아서 설명할 것임
# 정규식을 정리하면
# 1. p = re.compile("원하는 형태")
# 2. m = p.match("비교할 문자열") : 주어진 문자열의 처음부터 일치하는지 확인
# 3. m = p.search("비교할 문자열") : 주어진 문자열 중에 일치하는게 있는지 확인 
# 4. lst = p.findall("비교할 문자열") : 일치하는 모든 것을 "리스트" 형태로 반환 
# "원하는 형태" : 정규식 
# . (ca.e): 하나의 문자를 의미(한 글자만) > care, cafe, case
# ^ (^de): 문자열의 시작 > desk, destination
# $ (se$): 문자열의 끝 > case, baese
# 정규식을 더 공부하고 싶으면 w3school 홈페이지-> 하단에 python(learn python)클릭-> 왼쪽 list 중에 'Python RegEx'클릭해서 공부하면 됨
# 또는, python re 구글링해서 're---Regular expression operations---Python' 페이지(파이썬 공식홈페이지) 클릭해서 공부하면 됨

#**9 User agent 
# '5_user_agent.py' 파일 만들어서 설명
